{
    // Define the minimum log level used for logging output on the console.
    // Valid values are: "CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"
    "log_level": "WARNING",

    // Underline unknown keys in Sublime Settings.
    "settings.linting": true,

    // Auto complete keys and values in Sublime Settings.
    "settings.auto_complete": true,

    // Show tooltip with setting description on hovering keys and values.
    "settings.tooltip": true,

    // List of patterns for color schemes not to be displayed in completions.
    // Each color scheme containing one of the list's strings is hidden.
    "settings.exclude_color_scheme_patterns": [
        "/Color Scheme - Legacy",
        "/User/SublimeLinter",
        "/User/Sublimerge",
        "/User/GitSavvy",
        "/InactivePanes"
    ],

    // List of patterns for themes not to be displayed in completions.
    // Each theme containing one of the list's strings is hidden.
    "settings.exclude_theme_patterns": [],

    // Whether to show the edit settings pencil icon. Close & reopen the
    // settings file for this to take effect.
    "settings.show_quick_edit_icon": true,

    // List of patterns for syntax not to be displayed in completions.
    // Each theme containing one of the list's strings is hidden.
    "settings.exclude_syntax_patterns": [
        "*.tmLanguage",
        "Packages/zzz A File Icon zzz/**"
    ],

    // Whether or not to keep the scope suffix in the suggested test scopes
    // i.e. if the base scope is text.html.markdown
    // then suggest meta.example.markdown (true) vs meta.example (false).
    "syntax_test.suggest_scope_suffix": true,

    // Whether to trim leading scopes from suggestions
    // that are already part of previous assertions.
    "syntax_test.suggest_asserted_prefix": false,


    /// ADVANCED SETTINGS /////////////////////////////////////////////////////////////////////////

    // Scope for highlighting unknown settings keys.
    "settings.highlight_scope": "markup.warning.unknown-key.sublime-settings",

    // What add_region styles to use for highlighting of unknown settings keys.
    //
    // Valid values are:
    // "DRAW_EMPTY", "HIDE_ON_MINIMAP", "DRAW_EMPTY_AS_OVERWRITE", "DRAW_NO_FILL",
    // "DRAW_NO_OUTLINE", "DRAW_SOLID_UNDERLINE", "DRAW_STIPPLED_UNDERLINE",
    // "DRAW_SQUIGGLY_UNDERLINE", "HIDDEN", "PERSISTENT"
    "settings.highlight_styles": ["DRAW_SOLID_UNDERLINE", "DRAW_NO_FILL", "DRAW_NO_OUTLINE"],

    // Scope for highlighting capture group for the current scope line.
    "syntax.captures_highlight_scope": "markup.info.capture.sublime-syntax",

    // What add_region styles to use for highlighting of the capture group.
    //
    // Valid values are:
    // "DRAW_EMPTY", "HIDE_ON_MINIMAP", "DRAW_EMPTY_AS_OVERWRITE", "DRAW_NO_FILL",
    // "DRAW_NO_OUTLINE", "DRAW_SOLID_UNDERLINE", "DRAW_STIPPLED_UNDERLINE",
    // "DRAW_SQUIGGLY_UNDERLINE", "HIDDEN", "PERSISTENT"
    "syntax.captures_highlight_styles": ["DRAW_NO_FILL"],

    // Scope for highlighting the line/positions being tested.
    "syntax_test.highlight_scope": "markup.info.test.sublime-syntax",

    // What add_region styles to use for highlighting of the line/positions being tested.
    //
    // Valid values are:
    // "DRAW_EMPTY", "HIDE_ON_MINIMAP", "DRAW_EMPTY_AS_OVERWRITE", "DRAW_NO_FILL",
    // "DRAW_NO_OUTLINE", "DRAW_SOLID_UNDERLINE", "DRAW_STIPPLED_UNDERLINE",
    // "DRAW_SQUIGGLY_UNDERLINE", "HIDDEN", "PERSISTENT"
    "syntax_test.highlight_styles": ["DRAW_NO_FILL"],

    // Whether to skip whitespace after the previous line's test assertions when
    // pressing the Tab key on a new syntax test line
    "syntax_test.skip_whitespace": true,


    /// GLOBAL SETTINGS ///////////////////////////////////////////////////////////////////////////
    // The following settings need to be placed in your User "Preferences.sublime-settings" file
    // (or specified in project settings, etc.).
    //
    // // Enable input helpers for syntax definitions.
    // // Input helpers automatically insert whitespace after a `-` or `:`.
    // "packagedev.syntax.input_helpers": false,
}
